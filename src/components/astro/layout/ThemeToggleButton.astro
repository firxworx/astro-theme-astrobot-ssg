---
import { cn } from '@helpers/style'
import MoonIcon from '@components/astro/icons/MoonIcon.astro'
import SunIcon from '@components/astro/icons/SunIcon.astro'
import type { HTMLAttributes } from 'astro/types'

/**
 * Light/dark theme toggle button component.
 *
 * Depends on `is:inline` script code in `BaseLayout.astro` to set the initial theme based on the user's
 * preference and persist the user's choice in LocalStorage.
 *
 * The theme code is located in the layout to ensure it runs before the page is rendered.
 *
 * This implementation assumes the following:
 *
 * - light/dark is implemented per tailwindcss where a 'dark' class is applied to the root element
 * - the local storage key that saves the user's theme preference is: `theme`
 *
 * This component was first adapted from an example found in the official Astro tutorial:
 * https://docs.astro.build/en/tutorial/6-islands/2/
 *
 * Icons are by HeroIcons (MIT License) and revised for styling with tailwindcss.
 */
export interface Props extends HTMLAttributes<'button'> {
  [key: `data-${string}`]: string
  size?: 'sm' | 'md'
}

const { class: className, size = 'sm', ...restProps } = Astro.props
---

<button
  {...restProps}
  class={cn(
    'group inline-flex items-center justify-center p-2 rounded-md transition-colors',
    'text-P-nav-button-fg bg-P-nav-button hocus:bg-P-black/[0.02] dark:hocus:bg-P-white/[0.02]',
    'cx-focus-visible focus-visible:rounded-md',
    className,
  )}
  data-theme-toggle-button
>
  <span class="inline dark:hidden">
    <SunIcon
      class={cn('text-P-nav-link group-hover:text-P-nav-link-hover', {
        'h-4 w-4': size === 'sm',
        'h-5 w-5': size === 'md',
      })}
      aria-hidden="true"
    />
    <span class="sr-only">Switch to Dark Theme</span>
  </span>
  <span class="hidden dark:inline">
    <MoonIcon
      class={cn('h-4 w-4 text-P-nav-link group-hover:text-P-nav-link-hover', {
        'h-4 w-4': size === 'sm',
        'h-5 w-5': size === 'md',
      })}
      aria-hidden="true"
    />
    <span class="sr-only">Switch to Light Theme</span>
  </span>
</button>

<script>
  const handleThemeToggleClick = () => {
    const element = document.documentElement
    element.classList.toggle('dark')

    const isDark = element.classList.contains('dark')
    localStorage.setItem('theme', isDark ? 'dark' : 'light')
  }

  document.querySelectorAll('button[data-theme-toggle-button]').forEach((button) => {
    button.addEventListener('click', handleThemeToggleClick)
  })
</script>
