---
import type { PageLayoutMeta } from '@/types/site.types'
import { ASTRO_SITE_URL, SITE, BLOG_PATHNAME_SEGMENT } from '@config'

/**
 * Social media meta tags (Open Graph, Twitter, etc.) for the document head.
 */
export interface Props {
  meta: Pick<PageLayoutMeta, 'title' | 'description' | 'canonicalUrl' | 'image' | 'publishedAt' | 'modifiedAt'>
}

const {
  meta: { title, description, publishedAt, modifiedAt, canonicalUrl, image },
} = Astro.props

// we are only confident about the dimensions of social images generated by Astro
const inferIsImageGenerated = (image: string): boolean => {
  return image.startsWith(`${ASTRO_SITE_URL}/${BLOG_PATHNAME_SEGMENT}`) && image.endsWith('.png')
}
---

<meta property="og:title" content={title} />
<meta property="og:description" content={description} />
<meta property="og:url" content={canonicalUrl} />
{
  !!image && (
    <>
      <meta property="og:image" content={image} />
      {inferIsImageGenerated(image) && (
        <>
          <meta property="og:image:width" content={String(SITE.ogImageWidthPx)} />
          <meta property="og:image:height" content={String(SITE.ogImageHeightPx)} />
        </>
      )}
    </>
  )
}
<meta property="twitter:title" content={title} />
<meta property="twitter:description" content={description} />
<meta property="twitter:url" content={canonicalUrl} />
{!!image && <meta property="twitter:image" content={image} />}

{!!publishedAt && <meta property="article:published_time" content={publishedAt.toISOString()} />}
{!!modifiedAt && <meta property="article:modified_time" content={modifiedAt.toISOString()} />}
