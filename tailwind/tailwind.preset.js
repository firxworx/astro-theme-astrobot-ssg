import * as defaultTheme from 'tailwindcss/defaultTheme'
import typography from '@tailwindcss/typography'
import forms from '@tailwindcss/forms'
import aspectRatio from '@tailwindcss/aspect-ratio'
import containerQueries from '@tailwindcss/container-queries'
import tailwindcssAnimate from 'tailwindcss-animate'

import { getTailwindTypographyConfig } from './tailwind.typography.js'
import { getAstroShikiPaletteCssVariables } from './tailwind.shiki.js'
import { projectThemePaletteDefinition } from './tailwind.palette.js'

import projectToolboxPlugin from './plugins/tw-project-toolbox.plugin.js'
import themePalettePlugin from './plugins/tw-theme-palette.plugin.js'
import { em } from './lib/tailwind.utils.js'

/**
 * Override the base font size on to the html element to set the base rem unit size.
 *
 * Tailwind's default font size is 16 pixels.
 *
 * VSCode users should set `editor.fontSize` in project's `settings.json` to match this value for
 * IntelliSense to compute rem values correctly.
 */
const HTML_BASE_FONT_SIZE_PX = 18

/**
 * @type {Partial<import('tailwindcss').Config>}
 *
 * @see https://github.com/tailwindlabs/tailwindcss/blob/master/stubs/config.full.js default theme reference
 * @see https://github.com/tailwindlabs/tailwindcss-typography/blob/master/src/styles.js typography plugin theme reference
 */
const tailwindPresetConfig = {
  darkMode: ['class'],
  theme: {
    /**
     * Customize 'container' utility padding and screens if required.
     * Note the astrobot template boilerplate does not use the `container` class.
     * @see https://tailwindcss.com/docs/container
     */
    container: {
      center: true,
      padding: {
        DEFAULT: '1rem',
      },
    },

    /**
     * Add custom screen breakpoints that include xxs + xs for fine-tuning mobile ui's.
     *
     * For reference:
     * - ~320px is about smallest typical smartphone (e.g. the tiny iPhone 4)
     * - tailwind's defaults are in rem; at 16px body font they are: lg 1024px; xl 1280px; 2xl 1536px
     *
     * @see https://tailwindcss.com/docs/screens
     */
    screens: {
      mini: '315px',
      xxs: '400px',
      xs: '475px',
      ...defaultTheme.screens,
      // '2xl': '1400px', // default: 1280px
      // '3xl': '1600px', // default: 1536px
    },

    extend: {
      /**
       * The 'P' palette prefix convention is used to denote the project's custom palette.
       * Color entries are merged into `theme.extend.colors.P` below by the `tw-theme-palette` plugin.
       *
       * @see tailwind.palette.js for the project's palette definition used to populate `P` color utilities
       */
      colors: {
        P: {},
      },

      /**
       * Apply customization for the tailwind typography plugin (`prose` classes).
       *
       * @see tailwind.typography.js to further customize the styling/spacing/margins/etc. of `prose`-styled content
       * @see https://tailwindcss.com/docs/typography-plugin
       */
      typography: (theme) => getTailwindTypographyConfig(theme),
    },
  },
  plugins: [
    // official tailwind plugins
    typography,
    forms,
    aspectRatio,
    containerQueries,

    // community plugins
    tailwindcssAnimate,

    // project plugins
    projectToolboxPlugin,
    themePalettePlugin({
      palette: projectThemePaletteDefinition,
    }),

    /**
     * Custom inline plugin specific to this preset config.
     */
    function ({ addBase, theme }) {
      addBase({
        // regarding root css variables --
        // @see tailwind.palette.js and tw-theme-palette for specification of css variables re the project's color palette
        // @see tailwind.shiki.js to customize the variables of code fence blocks generated by astro shiki
        // @see https://tailwindcss.com/docs/customizing-colors#using-css-variables

        ':root': {
          'color-scheme': 'light',
          ...getAstroShikiPaletteCssVariables('light', theme),
        },
        '.dark': {
          'color-scheme': 'dark',
          ...getAstroShikiPaletteCssVariables('dark', theme),
        },

        html: {
          // @see comment at top of file for vscode settings to adjust when overriding tailwind's base font size
          fontSize: `${HTML_BASE_FONT_SIZE_PX}px`,

          // browser smooth scrolling
          scrollBehavior: 'smooth',

          // always show vertical scrollbar to avoid jank during transitions due to scrollbar width
          // this seems more predictable at present vs. `scrollbarGutter: 'stable'`
          overflowY: 'scroll',

          // caution:
          // overflow-y scroll risks adding jank when combined with certain popular ui libraries and modals.
          // current offenders include headlessui and radix-ui because they _insist_ on blocking devs from
          // styling control of their projects with egregious !important's and naive assumptions e.g. hardcoded widths.
        },
        body: {
          // customize scrollbar to use thin scrollbars (firefox only)
          scrollbarWidth: 'thin',

          // remove input type=number spinner on chrome/safari/edge/opera
          'input::-webkit-outer-spin-button, input::-webkit-inner-spin-button': {
            '-webkit-appearance': 'none',
            margin: '0',
          },

          // remove input type=number spinner on firefox
          'input[type="number"]': {
            '-moz-appearance': 'textfield',
          },

          // color utilities managed by the tw-theme-palette plugin are applied to base elements below
          // as a design decision headings and links under `main` are assigned the palette foreground colors
          //
          // @see tailwind.palette.js for color definitions

          '@apply bg-P-layout-main text-P-content-copy/95': {},

          '& > header': {
            '@apply bg-P-layout-header': {},
          },

          '& > main': {
            '@apply bg-P-layout-main': {},

            'h1, h2, h3, h4, h5, h6': {
              '@apply text-P-content-heading/95': {},
              a: {
                '@apply text-P-content-link/95 hover:text-P-content-link-hover/95': {},
              },
            },

            a: {
              '@apply text-P-content-link/95 hover:text-P-content-link-hover/95': {},
            },

            // match the font size set by the typography plugin on inline <code> elements for consistency
            'p code': {
              '@apply text-P-content-code/95 font-semibold': {},
              fontSize: em(14, 16),
            },
          },

          '& > footer': {
            '@apply bg-P-layout-footer text-P-layout-footer-fg/95': {},
          },
        },

        // custom style classes prefixed with 'cx' by convention so they are easy to spot and to avoid conflicts
        '.cx-focus': {
          '@apply focus:outline-none focus:ring-2 focus:ring-offset-0 focus:ring-P-primary-light/50': {},
        },
        '.cx-focus-visible': {
          '@apply focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-P-primary-light/50': {},
        },
        '.cx-focus-rounded': {
          '@apply focus:rounded-sm': {},
        },
        '.cx-disabled': {
          '@apply opacity-50 cursor-not-allowed pointer-events-none': {},
        },
      })
    },
  ],
}

export default tailwindPresetConfig
